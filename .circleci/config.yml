version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@9.1.0
  aws-cli: circleci/aws-cli@4.1.3

jobs:
  deploy:
    executor: aws-cli/default
    environment:
      NEW_INSTANCE_NAME: circleci
    steps:
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
      - add_ssh_keys:
          fingerprints:
            - "SHA256:u058n7JzYAn2CsIuZD2z9DPedUzJanC7bp7e0JN09/8"
      - run:
          command: ssh -o StrictHostKeyChecking=accept-new -i $HOME/.ssh/id_rsa* ubuntu@$INSTANCE_IP "sudo apt install curl unzip -y && curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip -y && sudo ./aws/install"
          name: Installing AWS CLI
      - run:
          command: ssh -o StrictHostKeyChecking=accept-new -i $HOME/.ssh/id_rsa* ubuntu@$INSTANCE_IP "sudo apt update && sudo apt install python3 -y"
          name: install python
      - run:
          command: ssh -o StrictHostKeyChecking=accept-new -i $HOME/.ssh/id_rsa* ubuntu@$INSTANCE_IP
            "sudo apt-get update &&
            sudo apt-get install ca-certificates curl &&
            sudo install -m 0755 -d /etc/apt/keyrings &&
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc &&
            sudo chmod a+r /etc/apt/keyrings/docker.asc &&
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
            sudo apt-get update &&
            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y"
          name: install docker
      - run:
          command: ssh -o StrictHostKeyChecking=accept-new -i $HOME/.ssh/id_rsa* ubuntu@$INSTANCE_IP "aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} && aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} && aws configure set default.region ${AWS_REGION}"
          name: Configure AWS
      - run:
          command: ssh -o StrictHostKeyChecking=accept-new -i $HOME/.ssh/id_rsa* ubuntu@$INSTANCE_IP "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com && docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/django-circleci-reg:latest"
workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build_and_push_image:
          account_id: ${AWS_ACCOUNT_ID}
          auth:
            - aws-cli/setup:
                aws_access_key_id: AWS_ACCESS_KEY_ID
                aws_secret_access_key: AWS_SECRET_ACCESS_KEY
                region: AWS_REGION
          context: aws-ecr
          create_repo: false
          dockerfile: Dockerfile
          region: ${AWS_REGION}
          path: .
          repo: django-circleci-reg

      - deploy:
          requires:
            - aws-ecr/build_and_push_image
          context: aws-ecr